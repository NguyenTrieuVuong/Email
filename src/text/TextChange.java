/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package text;

import java.util.ArrayList;
import java.util.List;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.io.FileWriter;

/**
 *
 * @author admin
 */
public class TextChange extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private ArrayList<Email> emailList = new ArrayList<>();

    public TextChange() {
        initComponents();
//        showComboData();
        this.currentIdx = -1;
        this.emailList = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        first = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        last = new javax.swing.JTextPane();
        createEmail = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        depart = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        firstButton = new javax.swing.JButton();
        pre = new javax.swing.JButton();
        next = new javax.swing.JButton();
        lastButton = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("First Name");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Last Name");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Depart");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        first.setText("Enter first name");
        first.setToolTipText("");
        first.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstMouseClicked(evt);
            }
        });
        first.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                firstComponentMoved(evt);
            }
        });
        jScrollPane1.setViewportView(first);

        last.setText("Enter last name");
        last.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(last);

        createEmail.setBackground(new java.awt.Color(255, 255, 255));
        createEmail.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        createEmail.setForeground(new java.awt.Color(0, 204, 204));
        createEmail.setText("Create Email");
        createEmail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEmailActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 0, 0));
        saveButton.setText("Save");
        saveButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        loadButton.setForeground(new java.awt.Color(102, 0, 255));
        loadButton.setText("Load");
        loadButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        closeButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        closeButton.setForeground(new java.awt.Color(0, 204, 0));
        closeButton.setText("Close");
        closeButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        depart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sale", "development", "accounting" }));
        depart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(255, 102, 255));
        update.setText("Update");
        update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(204, 204, 0));
        delete.setText("Delete");
        delete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        firstButton.setForeground(new java.awt.Color(51, 0, 255));
        firstButton.setText("First");
        firstButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        firstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstButtonActionPerformed(evt);
            }
        });

        pre.setForeground(new java.awt.Color(0, 204, 0));
        pre.setText("Prev");
        pre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });

        next.setForeground(new java.awt.Color(153, 0, 255));
        next.setText("Next");
        next.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        lastButton.setForeground(new java.awt.Color(255, 0, 0));
        lastButton.setText("Last");
        lastButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Password");

        jMenu1.setForeground(new java.awt.Color(0, 0, 255));
        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(0, 0, 255));
        jMenu2.setText("Show");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(depart, javax.swing.GroupLayout.Alignment.TRAILING, 0, 290, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                    .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(firstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(lastButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(pre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstButton)
                            .addComponent(next))
                        .addComponent(pre, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(lastButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(loadButton)
                    .addComponent(closeButton)
                    .addComponent(createEmail))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void firstComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_firstComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_firstComponentMoved

    private void createEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEmailActionPerformed
        // TODO add your handling code here:

        String firstName = this.first.getText();
        String lastName = this.last.getText();
        String department = (String) this.depart.getSelectedItem();
        String password = this.password.getText();
//        System.out.println(depart);

        e = new Email(firstName, lastName, department, password);
        System.out.println("Account " + e.getEmail() + " created !");
//        System.out.println("Account "+ firstName.toLowerCase()+lastName.toLowerCase()+"@"+department+".company.com"+" created !");
        emailList.add(e);
//        private void createAccountActionPerformed(java.awt.event.ActionEvent evt) {                                              
//        String first = this.firstName.getText();
//        String last = this.lastName.getText();
//        String depart = (String) this.department.getSelectedItem();
//        String pass = new String(this.passwdField.getPassword());
//        System.out.println(pass);
//
//        Email email = new Email(first, last, depart);
//        email.setPassword(pass);
//        this.emailList.add
    }//GEN-LAST:event_createEmailActionPerformed

    private void departActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        try {
            FileWriter writer = new FileWriter("test.csv");
            for (Email email : emailList) {
                writer.write(email.toString() + "\n");
            }
            writer.close();
        } catch (IOException e) {
            System.out.println("An error occured");
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        try {
            File file = new File("test.csv");
//            System.out.println(myFile.getAbsolutePath());
            Scanner reader = new Scanner(file);
            while (reader.hasNext()) {
                String line = reader.nextLine();
                System.out.println(line);
            }
        } catch (IOException m) {
            System.out.println("File not found");
            m.printStackTrace();
        }
//        try{
//            File file = new File("test.csv");
//            Scanner reader = new Scanner(file);
//            while (reader.hasNext()){
//                String line = reader.nextLine();
//                String [] lineSplit = line.split(",");
////                String [] lineSplit = new String[4];
//                String fName = lineSplit[0].trim();
////                System.out.println("printline");
//                String lName = lineSplit[1].trim();
////                System.out.println("printline");
//                String depart = lineSplit[3].trim();
//                Email mail = new Email(fName,lName,depart);
//                this.emailList.add(mail);
////                System.out.println("printline");
//            }
//            reader.close();
//        }
//        catch(FileNotFoundException e){
//            System.out.println("File not found");
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void firstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstButtonActionPerformed
        // TODO add your handling code here:
        if (this.emailList.size() == 0) {
            System.out.println("There is no email");

        } else {
            this.e = emailList.get(0);
            this.currentIdx = 0;
            displayEmail();
        }
    }//GEN-LAST:event_firstButtonActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        // TODO add your handling code here:
        if (this.emailList.size() == 0) {
            System.out.println("No email in the list");
        } else if (this.emailList.size() >= this.currentIdx) {
            this.currentIdx --;
            this.e = this.emailList.get(this.currentIdx);
            displayEmail();
            if(this.currentIdx==0){
                this.currentIdx = this.emailList.size();
            }
        }
//        else {
//            this.e = this.emailList.get(0);
//            this.currentIdx = 0;
//            displayEmail();
//        }
    }//GEN-LAST:event_preActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        if (this.emailList.size() == 0) {
            System.out.println("No email in the list");
        } else if (this.currentIdx < this.emailList.size() - 1) {
            this.currentIdx += 1;
            this.e = this.emailList.get(this.currentIdx);
            displayEmail();
        } else {
            this.e = this.emailList.get(0);
            this.currentIdx = 0;
            displayEmail();
        }
    }//GEN-LAST:event_nextActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if (this.emailList.isEmpty()){
            System.out.println("No email to delete");
        }
        else{
            this.emailList.remove(emailList.get(this.currentIdx));
            System.out.println("This email was successfully deleted");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        if (this.currentIdx == -1) {
            System.out.println("You can not update in current state");
        } else {
            String first = this.first.getText();
            String last = this.last.getText();
            String depart = (String) this.depart.getSelectedItem();
            String password = this.password.getText();
            Email email = new Email(first, last, depart, password);
            this.emailList.set(this.currentIdx, email);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void lastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastButtonActionPerformed
        // TODO add your handling code here:
        if (this.emailList.size() == 0) {
            System.out.println("There is no email");

        } else if(this.currentIdx < this.emailList.size() - 1){
            this.e = emailList.get(this.emailList.size()-1);
            this.currentIdx = this.emailList.size()-1;
            displayEmail();
        }  
        else{
            this.e = emailList.get(0);
            this.currentIdx = 0;
            displayEmail();
        }
    }//GEN-LAST:event_lastButtonActionPerformed

    private void firstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstMouseClicked
        // TODO add your handling code here:
        this.first.setText("");
    }//GEN-LAST:event_firstMouseClicked

    private void lastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastMouseClicked
        // TODO add your handling code here:
        this.last.setText("");
    }//GEN-LAST:event_lastMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextChange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton createEmail;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> depart;
    private javax.swing.JTextPane first;
    private javax.swing.JButton firstButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane last;
    private javax.swing.JButton lastButton;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton next;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton pre;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
    private Email e;
    private int currentIdx;
    private void displayEmail(){
        this.first.setText(this.e.getFirstName());
        this.last.setText(this.e.getLastName());
        this.depart.setSelectedItem(this.e.getDepart());
        this.password.setText(this.e.getPassword());
    }
}
